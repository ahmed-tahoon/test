{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js"],"names":["CheckBoxOutlineBlank","Object","createSvgIcon","react_default","a","createElement","d","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","objectWithoutProperties","SwitchBase","esm_extends","type","root","clsx_m","concat","helpers","checked","disabled","data-indeterminate","__webpack_exports__","withStyles","theme","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","name","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","clsx__WEBPACK_IMPORTED_MODULE_3__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_4__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_5__","_utils_helpers__WEBPACK_IMPORTED_MODULE_6__","_internal_SwitchBase__WEBPACK_IMPORTED_MODULE_7__","Switch","className","_props$edge","edge","_props$size","size","thumb","start","edgeStart","end","edgeEnd","small","switchBase","input","track","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","marginLeft","marginRight","top","left","grey","transition","transitions","create","duration","shortest","willChange","transform","&$checked + $track","opacity","&$disabled + $track","common","black","white","sizeSmall","& $thumb","& $switchBase","boxShadow","shadows","borderRadius","_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","clsx__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","_styles_transitions__WEBPACK_IMPORTED_MODULE_7__","_ClickAwayListener__WEBPACK_IMPORTED_MODULE_8__","_utils_helpers__WEBPACK_IMPORTED_MODULE_9__","_Grow__WEBPACK_IMPORTED_MODULE_10__","_SnackbarContent__WEBPACK_IMPORTED_MODULE_11__","Snackbar","_props$anchorOrigin","anchorOrigin","vertical","horizontal","autoHideDuration","children","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","message","onClose","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","open","resumeHideDuration","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","useRef","_React$useState","useState","_React$useState2","exited","setExited","setAutoHideTimer","useCallback","autoHideDurationParam","autoHideDurationBefore","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","window","addEventListener","removeEventListener","onClickAway","event","appear","in","timeout","direction","top1","bottom1","bottom","right","justifyContent","top3","bottom3","right3","left3","center","snackbar","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_Paper__WEBPACK_IMPORTED_MODULE_6__","_Typography__WEBPACK_IMPORTED_MODULE_7__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_8__","SnackbarContent","component","variant","variantMapping","body1","body2","role","square","elevation","emphasis","background","default","getContrastText","flexWrap","shape","flexGrow","minWidth","paddingLeft"],"mappings":"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","file":"static/js/12.21a7c8eb.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport { capitalize } from '../utils/helpers';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      willChange: 'left, transform',\n      '&$checked': {\n        left: '100%',\n        transform: 'translateX(-100%)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      start: classes.edgeStart,\n      end: classes.edgeEnd\n    }[edge], {\n      small: classes[\"size\".concat(capitalize(size))]\n    }[size])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport { capitalize, createChainedFunction } from '../utils/helpers';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, {}, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, {}, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, {}, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, {}, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, {}, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, {}, left3)))\n  };\n};\nvar Snackbar = React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      autoHideDuration = props.autoHideDuration,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      exited = _React$useState2[0],\n      setExited = _React$useState2[1]; // Timer that controls delay before snackbar auto hides\n\n\n  var setAutoHideTimer = React.useCallback(function (autoHideDurationParam) {\n    var autoHideDurationBefore = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n    if (!onClose || autoHideDurationBefore == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      var autoHideDurationAfter = autoHideDurationParam != null ? autoHideDurationParam : autoHideDuration;\n\n      if (!onClose || autoHideDurationAfter == null) {\n        return;\n      }\n\n      onClose(null, 'timeout');\n    }, autoHideDurationBefore);\n  }, [autoHideDuration, onClose]);\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer();\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      if (resumeHideDuration != null) {\n        setAutoHideTimer(resumeHideDuration);\n        return;\n      }\n\n      setAutoHideTimer(autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['top', 'bottom']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} reason Can be:`\"timeout\"` (`autoHideDuration` expired) or: `\"clickaway\"`\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If true, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the `Transition` element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport Typography from '../Typography';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    }),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\"]);\n\n  return React.createElement(Paper, _extends({\n    component: Typography,\n    variant: \"body2\",\n    variantMapping: {\n      body1: 'div',\n      body2: 'div'\n    },\n    role: \"alertdialog\",\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  /**\n   * The action to display.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);"],"sourceRoot":""}