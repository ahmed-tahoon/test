{"version":3,"sources":["views/Settings/components/General/components/ProfileDetails/ProfileDetails.js","views/Settings/components/General/components/SuccessSnackbar/SuccessSnackbar.js","views/Settings/components/General/components/GeneralSettings/GeneralSettings.js","views/Settings/components/General/General.js","views/Settings/components/Header/Header.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Security/Security.js","views/Settings/components/Subscription/Subscription.js","views/Settings/Settings.js","views/Settings/index.js"],"names":["useStyles","makeStyles","theme","root","content","display","alignItems","flexDirection","textAlgin","name","marginTop","spacing","avatar","height","width","removeBotton","ProfileDetails","props","profile","className","rest","Object","objectWithoutProperties","classes","react_default","a","createElement","Card","assign","clsx","CardContent","Avatar","src","Typography","gutterBottom","variant","firstName","lastName","color","state","country","timezone","CardActions","Button","backgroundColor","colors","green","message","icon","marginRight","SuccessSnackbar","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","CheckCircleOutlined_default","defaultProps","saveButton","palette","white","&:hover","GeneralSettings","_useState","useState","_useState2","slicedToArray","openSnackbar","setOpenSnackbar","_useState3","email","phone","isPublic","canHire","_useState4","values","setValues","handleChange","event","persist","objectSpread","defineProperty","target","type","checked","value","onSubmit","preventDefault","CardHeader","title","Divider","Grid","container","item","md","xs","TextField","fullWidth","helperText","label","onChange","required","select","SelectProps","native","map","key","Switch","edge","components_SuccessSnackbar_SuccessSnackbar","General","setProfile","useEffect","mounted","axios","get","then","response","data","lg","xl","components_ProfileDetails_ProfileDetails","components_GeneralSettings_GeneralSettings","Header","component","Notifications","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","react","Security","password","confirm","valid","disabled","action","overview","flexWrap","justifyContent","breakpoints","down","product","productImage","details","notice","Subscription","subscription","setSubscription","size","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","Link","RouterLink","to","maxWidth","margin","padding","tabs","divider","grey","Settings","match","history","tab","params","find","t","components","components_Header_Header","Tabs","push","scrollButtons","Tab","components_General_General","components_Subscription_Subscription","components_Notifications_Notifications","components_Security_Security","react_router","__webpack_require__","d","__webpack_exports__","views_Settings_Settings"],"mappings":"8QAaMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACNC,QAAS,CACPC,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,UAAW,UAEbC,KAAM,CACJC,UAAWR,EAAMS,QAAQ,IAE3BC,OAAQ,CACNC,OAAQ,IACRC,MAAO,KAETC,aAAc,CACZD,MAAO,WAwDIE,EApDQ,SAAAC,GAAS,IACtBC,EAAgCD,EAAhCC,QAASC,EAAuBF,EAAvBE,UAAcC,EADDC,OAAAC,EAAA,EAAAD,CACUJ,EADV,yBAGxBM,EAAUvB,IAEhB,OACEwB,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,GACMR,EADN,CAEED,UAAWU,YAAKN,EAAQpB,KAAMgB,KAE9BK,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaX,UAAWI,EAAQnB,SAC9BoB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEZ,UAAWI,EAAQX,OACnBoB,IAAKd,EAAQN,SAEfY,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEd,UAAWI,EAAQd,KACnByB,cAAY,EACZC,QAAQ,MAEPjB,EAAQkB,UAAU,IAAElB,EAAQmB,UAE/Bb,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEK,MAAM,gBACNH,QAAQ,SAEPjB,EAAQqB,MAAM,KAAGrB,EAAQsB,SAE5BhB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEK,MAAM,gBACNH,QAAQ,SAEPjB,EAAQuB,WAGbjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACExB,UAAWI,EAAQR,aACnBoB,QAAQ,QACT,uGClEHnC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCE,QAAS,CACPwC,gBAAiBC,IAAOC,MAAM,MAEhCC,QAAS,CACP1C,QAAS,OACTC,WAAY,UAEd0C,KAAM,CACJC,YAAa/C,EAAMS,QAAQ,OAIzBuC,EAAkB,SAAAjC,GAAS,IACvBkC,EAAkBlC,EAAlBkC,KAAMC,EAAYnC,EAAZmC,QAER7B,EAAUvB,IAEhB,OACEwB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,MACVC,WAAY,UAEdC,iBAAkB,IAClBL,QAASA,EACTD,KAAMA,GAEN3B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CACEvC,UAAWI,EAAQnB,QACnB2C,QACEvB,EAAAC,EAAAC,cAAA,QAAMP,UAAWI,EAAQwB,SACvBvB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAiBN,UAAWI,EAAQyB,OAAQ,+BAIhDb,QAAQ,SAWhBe,EAAgBU,aAAe,CAC7BT,MAAM,EACNC,QAAS,cAGIF,QCtCTlD,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACN0D,WAAY,CACVvB,MAAOpC,EAAM4D,QAAQC,MACrBnB,gBAAiBC,IAAOC,MAAM,KAC9BkB,UAAW,CACTpB,gBAAiBC,IAAOC,MAAM,UA6NrBmB,EAxNS,SAAAhD,GAAS,IACvBC,EAAgCD,EAAhCC,QAASC,EAAuBF,EAAvBE,UAAcC,EADAC,OAAAC,EAAA,EAAAD,CACSJ,EADT,yBAGzBM,EAAUvB,IAHekE,EAISC,oBAAS,GAJlBC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAA6C,EAAA,GAIxBI,EAJwBF,EAAA,GAIVG,EAJUH,EAAA,GAAAI,EAKHL,mBAAS,CACnC/B,UAAWlB,EAAQkB,UACnBC,SAAUnB,EAAQmB,SAClBoC,MAAOvD,EAAQuD,MACfC,MAAOxD,EAAQwD,MACfnC,MAAOrB,EAAQqB,MACfC,QAAStB,EAAQsB,QACjBmC,SAAUzD,EAAQyD,SAClBC,QAAS1D,EAAQ0D,UAbYC,EAAAxD,OAAAgD,EAAA,EAAAhD,CAAAmD,EAAA,GAKxBM,EALwBD,EAAA,GAKhBE,EALgBF,EAAA,GAgBzBG,EAAe,SAAAC,GACnBA,EAAMC,UAENH,EAAU1D,OAAA8D,EAAA,EAAA9D,CAAA,GACLyD,EADIzD,OAAA+D,EAAA,EAAA/D,CAAA,GAEN4D,EAAMI,OAAO5E,KACU,aAAtBwE,EAAMI,OAAOC,KACTL,EAAMI,OAAOE,QACbN,EAAMI,OAAOG,UAevB,OACEhE,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,GACMR,EADN,CAEED,UAAWU,YAAKN,EAAQpB,KAAMgB,KAE9BK,EAAAC,EAAAC,cAAA,QAAM+D,SAhBW,SAAAR,GACnBA,EAAMS,iBACNnB,GAAgB,KAeZ/C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYC,MAAM,YAClBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,WAAS,EACTpF,QAAS,GAETa,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTC,WAAW,gCACXC,MAAM,aACN7F,KAAK,YACL8F,SAAUvB,EACVwB,UAAQ,EACRhB,MAAOV,EAAO1C,UACdD,QAAQ,cAGZX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,YACN7F,KAAK,WACL8F,SAAUvB,EACVwB,UAAQ,EACRhB,MAAOV,EAAOzC,SACdF,QAAQ,cAGZX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,gBACN7F,KAAK,QACL8F,SAAUvB,EACVwB,UAAQ,EACRhB,MAAOV,EAAOL,MACdtC,QAAQ,cAGZX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,eACN7F,KAAK,QACL8F,SAAUvB,EACVM,KAAK,OACLE,MAAOV,EAAOJ,MACdvC,QAAQ,cAGZX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,eACN7F,KAAK,QACL8F,SAAUvB,EACVyB,QAAM,EAENC,YAAa,CAAEC,QAAQ,GACvBnB,MAAOV,EAAOvC,MACdJ,QAAQ,YA1FP,CAAC,UAAW,WAAY,iBA4FjByE,IAAI,SAAArE,GAAK,OACff,EAAAC,EAAAC,cAAA,UACEmF,IAAKtE,EACLiD,MAAOjD,GAENA,OAKTf,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,UACN7F,KAAK,UACL8F,SAAUvB,EACVwB,UAAQ,EACRhB,MAAOV,EAAOtC,QACdL,QAAQ,cAGZX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,MAAK,4BACzBX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SAAQ,oFAI5BX,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEvB,QAAST,EAAOH,SAChBrC,MAAM,YACNyE,KAAK,QACLtG,KAAK,WACL8F,SAAUvB,KAGdxD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,MAAK,qBACzBX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SAAQ,gGAI5BX,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEvB,QAAST,EAAOF,QAChBtC,MAAM,YACNyE,KAAK,QACLtG,KAAK,UACL8F,SAAUvB,OAKlBxD,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACExB,UAAWI,EAAQsC,WACnByB,KAAK,SACLnD,QAAQ,aACT,kBAKLX,EAAAC,EAAAC,cAACsF,EAAD,CACE5D,QA3KsB,WAC1BmB,GAAgB,IA2KZpB,KAAMmB,MCnORtE,EAAYC,YAAW,iBAAO,CAClCE,KAAM,MAgEO8G,EA7DC,SAAAhG,GAAS,IACfE,EAAuBF,EAAvBE,UAAcC,EADCC,OAAAC,EAAA,EAAAD,CACQJ,EADR,eAGjBM,EAAUvB,IAHOkE,EAIOC,mBAAS,MAJhBC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAA6C,EAAA,GAIhBhD,EAJgBkD,EAAA,GAIP8C,EAJO9C,EAAA,GAwBvB,OAlBA+C,oBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,wBAAwBC,KAAK,SAAAC,GACjCJ,GACFF,EAAWM,EAASC,KAAKvG,WAOxB,WACLkG,GAAU,IAEX,IAEElG,EAKHM,EAAAC,EAAAC,cAACoE,EAAA,EAADzE,OAAAO,OAAA,GACMR,EADN,CAEED,UAAWU,YAAKN,EAAQpB,KAAMgB,GAC9B4E,WAAS,EACTpF,QAAS,IAETa,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJ0B,GAAI,EACJzB,GAAI,EACJ0B,GAAI,EACJzB,GAAI,IAEJ1E,EAAAC,EAAAC,cAACkG,EAAD,CAAgB1G,QAASA,KAE3BM,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJ0B,GAAI,EACJzB,GAAI,EACJ0B,GAAI,EACJzB,GAAI,IAEJ1E,EAAAC,EAAAC,cAACmG,EAAD,CAAiB3G,QAASA,MA1BvB,MChCLlB,EAAYC,YAAW,iBAAO,CAClCE,KAAM,MAkCO2H,EA/BA,SAAA7G,GAAS,IACdE,EAAuBF,EAAvBE,UAAcC,EADAC,OAAAC,EAAA,EAAAD,CACSJ,EADT,eAGhBM,EAAUvB,IAEhB,OACEwB,EAAAC,EAAAC,cAAA,MAAAL,OAAAO,OAAA,GACMR,EADN,CAEED,UAAWU,YAAKN,EAAQpB,KAAMgB,KAE9BK,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE8F,UAAU,KACV7F,cAAY,EACZC,QAAQ,YACT,YAGDX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE8F,UAAU,KACV5F,QAAQ,MACT,mDCZDnC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACN6F,KAAM,CACJ3F,QAAS,OACTE,cAAe,UAEjBsD,WAAY,CACVvB,MAAOpC,EAAM4D,QAAQC,MACrBnB,gBAAiBC,IAAOC,MAAM,KAC9BkB,UAAW,CACTpB,gBAAiBC,IAAOC,MAAM,UA4IrBkF,EAvIO,SAAA/G,GAAS,IACrBE,EAAuBF,EAAvBE,UAAcC,EADOC,OAAAC,EAAA,EAAAD,CACEJ,EADF,eAGvBM,EAAUvB,IAEhB,OACEwB,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,GACMR,EADN,CAEED,UAAWU,YAAKN,EAAQpB,KAAMgB,KAE9BK,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYC,MAAM,kBAClBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,WAAS,EACTpF,QAAS,EACTsH,KAAK,QAELzG,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACE3E,UAAWI,EAAQyE,KACnBA,MAAI,EACJC,GAAI,EACJiC,GAAI,EACJhC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,MACT,UAGDX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,SACT,0DAGDX,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,QACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACE/F,MAAM,UACNgG,gBAAc,IAGlBhC,MAAM,iBAER9E,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,QAAS5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAU/F,MAAM,YACzBgE,MAAM,uBAER9E,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,QACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACE/F,MAAM,UACNgG,gBAAc,IAGlBhC,MAAM,iBAER9E,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,QACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACE/F,MAAM,UACNgG,gBAAc,IAGlBhC,MACE9E,EAAAC,EAAAC,cAAC6G,EAAA,SAAD,KACE/G,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SAAQ,eAC5BX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,WAAU,sCAOtCX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACE3E,UAAWI,EAAQyE,KACnBA,MAAI,EACJC,GAAI,EACJiC,GAAI,EACJhC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,MACT,YAGDX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,SACT,0DAGDX,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,QACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACE/F,MAAM,UACNgG,gBAAc,IAGlBhC,MAAM,UAER9E,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CACEC,QACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CACE/F,MAAM,UACNgG,gBAAc,IAGlBhC,MAAM,2BAMhB9E,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACExB,UAAWI,EAAQsC,WACnB1B,QAAQ,aACT,mBC5IHnC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACN0D,WAAY,CACVvB,MAAOpC,EAAM4D,QAAQC,MACrBnB,gBAAiBC,IAAOC,MAAM,KAC9BkB,UAAW,CACTpB,gBAAiBC,IAAOC,MAAM,UA0FrB0F,EArFE,SAAAvH,GAAS,IAChBE,EAAuBF,EAAvBE,UAAcC,EADEC,OAAAC,EAAA,EAAAD,CACOJ,EADP,eAGlBM,EAAUvB,IAHQkE,EAKIC,mBAAS,CACnCsE,SAAU,GACVC,QAAS,KAPatE,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAA6C,EAAA,GAKjBY,EALiBV,EAAA,GAKTW,EALSX,EAAA,GAUlBY,EAAe,SAAAC,GACnBF,EAAU1D,OAAA8D,EAAA,EAAA9D,CAAA,GACLyD,EADIzD,OAAA+D,EAAA,EAAA/D,CAAA,GAEN4D,EAAMI,OAAO5E,KAAOwE,EAAMI,OAAOG,UAIhCmD,EAAQ7D,EAAO2D,UAAY3D,EAAO2D,WAAa3D,EAAO4D,QAE5D,OACElH,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,GACMR,EADN,CAEED,UAAWU,YAAKN,EAAQpB,KAAMgB,KAE9BK,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYC,MAAM,oBAClBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEC,WAAS,EACTpF,QAAS,GAETa,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJiC,GAAI,EACJhC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,WACN7F,KAAK,WACL8F,SAAUvB,EACVM,KAAK,WACLE,MAAOV,EAAO2D,SACdtG,QAAQ,cAGZX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJiC,GAAI,EACJhC,GAAI,IAEJ1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACEC,WAAS,EACTE,MAAM,mBACN7F,KAAK,UACL8F,SAAUvB,EACVM,KAAK,WACLE,MAAOV,EAAO4D,QACdvG,QAAQ,iBAMlBX,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACExB,UAAWI,EAAQsC,WACnB+E,UAAWD,EACXxG,QAAQ,aACT,oCCnFHnC,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACN0I,OAAQ,CACN5F,YAAa,EACbvC,UAAW,GAEboI,SAASzH,OAAA+D,EAAA,EAAA/D,CAAA,CACPhB,QAAS,OACTC,WAAY,SACZyI,SAAU,OACVC,eAAgB,iBACf9I,EAAM+I,YAAYC,KAAK,MAAQ,CAC9B3I,cAAe,iBACfD,WAAY,eAGhB6I,QAAS,CACP9I,QAAS,OACTC,WAAY,UAEd8I,aAAc,CACZnG,YAAa/C,EAAMS,QAAQ,GAC3BE,OAAQ,GACRC,MAAO,IAETuI,QAAQhI,OAAA+D,EAAA,EAAA/D,CAAA,CACNhB,QAAS,OACTC,WAAY,SACZyI,SAAU,OACVC,eAAgB,iBACf9I,EAAM+I,YAAYC,KAAK,MAAQ,CAC9B3I,cAAe,SACfD,WAAY,eAGhBgJ,OAAQ,CACN5I,UAAWR,EAAMS,QAAQ,OAkId4I,EA9HM,SAAAtI,GAAS,IACpBE,EAAuBF,EAAvBE,UAAcC,EADMC,OAAAC,EAAA,EAAAD,CACGJ,EADH,eAGtBM,EAAUvB,IAHYkE,EAIYC,mBAAS,MAJrBC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAA6C,EAAA,GAIrBsF,EAJqBpF,EAAA,GAIPqF,EAJOrF,EAAA,GAwB5B,OAlBA+C,oBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,6BAA6BC,KAAK,SAAAC,GACtCJ,GACFqC,EAAgBjC,EAASC,KAAK+B,gBAO7B,WACLpC,GAAU,IAEX,IAEEoC,EAKHhI,EAAAC,EAAAC,cAACC,EAAA,EAADN,OAAAO,OAAA,GACMR,EADN,CAEED,UAAWU,YAAKN,EAAQpB,KAAMgB,KAE9BK,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACEkD,OACErH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACE+G,KAAK,QACLvH,QAAQ,aACT,gBAIHZ,QAAS,CAAEsH,OAAQtH,EAAQsH,QAC3BjD,MAAM,6BAERpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaX,UAAWI,EAAQuH,UAC9BtH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE5B,QAAQ,SACR8B,QAAQ,MAEPqH,EAAaG,SACbH,EAAaI,OAEhBpI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACE5B,QAAQ,SACR8B,QAAQ,aACT,QAIHX,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQ4H,SACtB3H,EAAAC,EAAAC,cAAA,OACEmI,IAAI,UACJ1I,UAAWI,EAAQ6H,aACnBpH,IAAI,4CAENR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,YAAYqH,EAAa/I,QAGjDe,EAAAC,EAAAC,cAACmE,EAAA,EAAD,MACArE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaX,UAAWI,EAAQ8H,SAC9B7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SACjBqH,EAAaM,cAAc,mBAE9BtI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SACjBqH,EAAaO,cAAc,eAGhCvI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SACjBqH,EAAaQ,YAAY,iBAE5BxI,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SACjBqH,EAAaS,QAAQ,cAG1BzI,EAAAC,EAAAC,cAAA,WACG8H,EAAaU,cACZ1I,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SAAQ,uBAE7BqH,EAAaW,gBACZ3I,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYE,QAAQ,SAAQ,kBAIlCX,EAAAC,EAAAC,cAACmE,EAAA,EAAD,OAEFrE,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEd,UAAWI,EAAQ+H,OACnBnH,QAAQ,SACT,4EAEQ,IACPX,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CACE9H,MAAM,YACNyF,UAAWsC,IACXC,GAAG,KACJ,4BAEM,OAzFN,MCnELtK,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJW,MAAOZ,EAAM+I,YAAYnE,OAAO4C,GAChC6C,SAAU,OACVC,OAAQ,SACRC,QAASvK,EAAMS,QAAQ,IAEzB+J,KAAM,CACJhK,UAAWR,EAAMS,QAAQ,IAE3BgK,QAAS,CACP/H,gBAAiBC,IAAO+H,KAAK,MAE/BxK,QAAS,CACPM,UAAWR,EAAMS,QAAQ,OAiEdkK,GA7DE,SAAA5J,GAAS,IAChB6J,EAAmB7J,EAAnB6J,MAAOC,EAAY9J,EAAZ8J,QACTxJ,EAAUvB,IACRgL,EAAQF,EAAMG,OAAdD,IAMFN,EAAO,CACX,CAAElF,MAAO,UAAWc,MAAO,WAC3B,CAAEd,MAAO,eAAgBc,MAAO,gBAChC,CAAEd,MAAO,gBAAiBc,MAAO,iBACjC,CAAEd,MAAO,WAAYc,MAAO,aAG9B,OAAK0E,EAIAN,EAAKQ,KAAK,SAAAC,GAAC,OAAIA,EAAE3F,QAAUwF,IAK9BxJ,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACEjK,UAAWI,EAAQpB,KACnByF,MAAM,YAENpE,EAAAC,EAAAC,cAAC2J,EAAD,MACA7J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CACEnK,UAAWI,EAAQmJ,KACnBnE,SA3BmB,SAACtB,EAAOO,GAC/BuF,EAAQQ,KAAK/F,IA2BTgG,cAAc,OACdhG,MAAOwF,EACP7I,QAAQ,cAEPuI,EAAK9D,IAAI,SAAAoE,GAAG,OACXxJ,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CACE5E,IAAKmE,EAAIxF,MACTc,MAAO0E,EAAI1E,MACXd,MAAOwF,EAAIxF,WAIjBhE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAS1E,UAAWI,EAAQoJ,UAC5BnJ,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQnB,SACb,YAAR4K,GAAqBxJ,EAAAC,EAAAC,cAACgK,EAAD,MACb,iBAARV,GAA0BxJ,EAAAC,EAAAC,cAACiK,EAAD,MAClB,kBAARX,GAA2BxJ,EAAAC,EAAAC,cAACkK,EAAD,MACnB,aAARZ,GAAsBxJ,EAAAC,EAAAC,cAACmK,EAAD,QA7BpBrK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAUxB,GAAG,sBAJb9I,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAUxB,GAAG,uBClDxByB,EAAAC,EAAAC,EAAA,4BAAAC","file":"static/js/13.2f787772.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Avatar,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlgin: 'center'\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  },\n  removeBotton: {\n    width: '100%'\n  }\n}));\n\nconst ProfileDetails = props => {\n  const { profile, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <Avatar\n          className={classes.avatar}\n          src={profile.avatar}\n        />\n        <Typography\n          className={classes.name}\n          gutterBottom\n          variant=\"h3\"\n        >\n          {profile.firstName} {profile.lastName}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {profile.state}, {profile.country}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {profile.timezone}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          className={classes.removeBotton}\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst SuccessSnackbar = props => {\n  const { open, onClose } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={6000}\n      onClose={onClose}\n      open={open}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            Successfully saved changes!\n          </span>\n        }\n        variant=\"h6\"\n      />\n    </Snackbar>\n  );\n};\n\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\n\nexport default SuccessSnackbar;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\n\nimport SuccessSnackbar from '../SuccessSnackbar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst GeneralSettings = props => {\n  const { profile, className, ...rest } = props;\n\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [values, setValues] = useState({\n    firstName: profile.firstName,\n    lastName: profile.lastName,\n    email: profile.email,\n    phone: profile.phone,\n    state: profile.state,\n    country: profile.country,\n    isPublic: profile.isPublic,\n    canHire: profile.canHire\n  });\n\n  const handleChange = event => {\n    event.persist();\n\n    setValues({\n      ...values,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setOpenSnackbar(true);\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  const states = ['Alabama', 'New York', 'San Francisco'];\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form onSubmit={handleSubmit}>\n        <CardHeader title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={4}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"text\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map(state => (\n                  <option\n                    key={state}\n                    value={state}\n                  >\n                    {state}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">Make Contact Info Public</Typography>\n              <Typography variant=\"body2\">\n                Means that anyone viewing your profile will be able to see your\n                contacts details\n              </Typography>\n              <Switch\n                checked={values.isPublic}\n                color=\"secondary\"\n                edge=\"start\"\n                name=\"isPublic\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">Available to hire</Typography>\n              <Typography variant=\"body2\">\n                Toggling this will let your teamates know that you are available\n                for acquireing new projects\n              </Typography>\n              <Switch\n                checked={values.canHire}\n                color=\"secondary\"\n                edge=\"start\"\n                name=\"canHire\"\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            className={classes.saveButton}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Changes\n          </Button>\n        </CardActions>\n      </form>\n      <SuccessSnackbar\n        onClose={handleSnackbarClose}\n        open={openSnackbar}\n      />\n    </Card>\n  );\n};\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { ProfileDetails, GeneralSettings } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProfile = () => {\n      axios.get('/api/account/profile').then(response => {\n        if (mounted) {\n          setProfile(response.data.profile);\n        }\n      });\n    };\n\n    fetchProfile();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails profile={profile} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings profile={profile} />\n      </Grid>\n    </Grid>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Settings\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        Change account information\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Notifications\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email alerts\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Text message\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label={\n                  <Fragment>\n                    <Typography variant=\"body1\">Phone calls</Typography>\n                    <Typography variant=\"caption\">\n                      Short voice phone updating you\n                    </Typography>\n                  </Fragment>\n                }\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                }\n                label=\"Push notifications\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Button,\n  Divider,\n  TextField,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst Security = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const valid = values.password && values.password === values.confirm;\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Change password\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Security\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Confirm password\"\n                name=\"confirm\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirm}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          disabled={!valid}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Typography\n} from '@material-ui/core';\n\nimport axios from 'utils/axios';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  action: {\n    marginRight: 0,\n    marginTop: 0\n  },\n  overview: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  product: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  },\n  notice: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Subscription = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [subscription, setSubscription] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchSubscription = () => {\n      axios.get('/api/account/subscription').then(response => {\n        if (mounted) {\n          setSubscription(response.data.subscription);\n        }\n      });\n    };\n\n    fetchSubscription();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        }\n        classes={{ action: classes.action }}\n        title=\"Manage your subscription\"\n      />\n      <Divider />\n      <CardContent>\n        <Card>\n          <CardContent className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <div className={classes.product}>\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/images/products/product_freelancer.svg\"\n              />\n              <Typography variant=\"overline\">{subscription.name}</Typography>\n            </div>\n          </CardContent>\n          <Divider />\n          <CardContent className={classes.details}>\n            <div>\n              <Typography variant=\"body1\">\n                {subscription.proposalsLeft} proposals left\n              </Typography>\n              <Typography variant=\"body1\">\n                {subscription.templatesLeft} templates\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body1\">\n                {subscription.invitesLeft} invites left\n              </Typography>\n              <Typography variant=\"body1\">\n                {subscription.adsLeft} ads left\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography variant=\"body1\">Analytics dashboard</Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography variant=\"body1\">Email alerts</Typography>\n              )}\n            </div>\n          </CardContent>\n          <Divider />\n        </Card>\n        <Typography\n          className={classes.notice}\n          variant=\"body2\"\n        >\n          The refunds don't work once you have the subscription, but you can\n          always{' '}\n          <Link\n            color=\"secondary\"\n            component={RouterLink}\n            to=\"#\"\n          >\n            Cancel your subscription\n          </Link>\n          .\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\n\nimport { Page } from 'components';\nimport {\n  Header,\n  General,\n  Subscription,\n  Notifications,\n  Security\n} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Settings = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'general', label: 'General' },\n    { value: 'subscription', label: 'Subscription' },\n    { value: 'notifications', label: 'Notifications' },\n    { value: 'security', label: 'Security' }\n  ];\n\n  if (!tab) {\n    return <Redirect to=\"/settings/general\" />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Header />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'general' && <General />}\n        {tab === 'subscription' && <Subscription />}\n        {tab === 'notifications' && <Notifications />}\n        {tab === 'security' && <Security />}\n      </div>\n    </Page>\n  );\n};\n\nSettings.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Settings;\n","export { default } from './Settings';\n"],"sourceRoot":""}