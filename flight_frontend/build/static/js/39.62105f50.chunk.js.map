{"version":3,"sources":["views/KanbanBoard/components/Header/Header.js","views/KanbanBoard/components/TaskList/TaskList.js","views/KanbanBoard/components/TaskListItem/TaskListItem.js","views/KanbanBoard/components/TaskDetails/TaskDetails.js","views/KanbanBoard/KanbanBoard.js","views/KanbanBoard/index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","Header","props","onListAdd","className","rest","Object","objectWithoutProperties","classes","react_default","a","createElement","assign","clsx","Grid","alignItems","container","justify","item","Typography","component","gutterBottom","variant","Button","color","onClick","defineProperty","userSelect","whiteSpace","height","display","flexDirection","verticalAlign","width","margin","breakpoints","down","isDraggingOver","header","backgroundColor","palette","primary","main","contrastText","borderRadius","counter","marginLeft","headerAction","content","flexGrow","overflowY","inner","TaskList","title","total","provided","snapshot","children","ref","innerRef","Tooltip","IconButton","edge","Add_default","lib_default","options","suppressScrollX","outline","marginBottom","isDragging","paddingTop","stats","files","icon","comments","date","progress","marginTop","TaskListItem","task","onOpen","style","Card","draggableProps","dragHandleProps","objectSpread","CardHeader","action","components","subheader","concat","subheaderTypographyProps","titleTypographyProps","CardContent","avatars","members","limit","AttachFile_default","Chat_default","moment","deadline","format","displayName","defaultProps","position","top","left","transform","boxShadow","shadows","maxWidth","TaskDetails","open","onClose","Modal","desc","overflowX","KanbanBoard","_useState","useState","_useState2","slicedToArray","lists","setLists","_useState3","_useState4","openedTask","setOpenedTask","useEffect","mounted","axios","get","then","response","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","data","Symbol","iterator","next","done","list","value","push","items","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","forEach","id","_iterator2","tasks","components_Header_Header","uuid","toConsumableArray","react_beautiful_dnd_esm","onDragEnd","event","source","destination","newLists","_","clone","sourceList","find","droppableId","destinationList","_sourceList$items$spl","splice","index","removedItem","map","key","components_TaskList_TaskList","length","draggableId","components_TaskListItem_TaskListItem","handleTaskOpen","placeholder","components_TaskDetails_TaskDetails","Boolean","__webpack_require__","d","__webpack_exports__","views_KanbanBoard_KanbanBoard"],"mappings":"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","file":"static/js/39.62105f50.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  }\n}));\n\nconst Header = props => {\n  const { onListAdd, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Organization\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Kanban Board\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            onClick={onListAdd}\n            variant=\"contained\"\n          >\n            Add list\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  onListAdd: PropTypes.func\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, IconButton, Tooltip } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    userSelect: 'none',\n    whiteSpace: 'normal',\n    height: '100%',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    width: 500,\n    padding: theme.spacing(0, 1),\n    margin: theme.spacing(0, 1),\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  },\n  isDraggingOver: {},\n  header: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(0.5, 2),\n    borderRadius: 4,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  counter: {\n    marginLeft: theme.spacing(1)\n  },\n  headerAction: {\n    marginLeft: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    overflowY: 'hidden'\n  },\n  inner: {\n    padding: theme.spacing(2, 3)\n  }\n}));\n\nconst TaskList = props => {\n  const {\n    title,\n    total,\n    provided,\n    snapshot,\n    className,\n    children,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n      ref={provided.innerRef}\n    >\n      <div className={classes.header}>\n        <Typography\n          color=\"inherit\"\n          variant=\"h5\"\n        >\n          {title}\n        </Typography>\n        <Typography\n          className={classes.counter}\n          color=\"inherit\"\n          variant=\"h6\"\n        >\n          - {total}\n        </Typography>\n        <div className={classes.headerAction}>\n          <Tooltip title=\"Add task\">\n            <IconButton\n              color=\"inherit\"\n              edge=\"end\"\n              variant=\"contained\"\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n      <div\n        className={clsx(classes.content, {\n          [classes.isDraggingOver]: snapshot.isDraggingOver\n        })}\n      >\n        <PerfectScrollbar options={{ suppressScrollX: true }}>\n          <div className={classes.inner}>{children}</div>\n        </PerfectScrollbar>\n      </div>\n    </div>\n  );\n};\n\nTaskList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  total: PropTypes.number\n};\n\nexport default TaskList;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport { StackAvatars, GenericMoreButton } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    outline: 'none',\n    marginBottom: theme.spacing(2)\n  },\n  isDragging: {},\n  content: {\n    paddingTop: 0\n  },\n  stats: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  files: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  comments: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: theme.spacing(2)\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst TaskListItem = props => {\n  // eslint-disable-next-line no-unused-vars\n  const { task, onOpen, provided, snapshot, className, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      className={clsx(\n        classes.root,\n        {\n          [classes.isDragging]: snapshot.isDragging\n        },\n        className\n      )}\n      style={{ ...style, ...provided.draggableProps.style }}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        subheader={`#${task.ref}`}\n        subheaderTypographyProps={{ variant: 'overline' }}\n        title={task.title}\n        titleTypographyProps={{ variant: 'h5', gutterBottom: true }}\n      />\n      <CardContent className={classes.content}>\n        <div className={classes.stats}>\n          <StackAvatars\n            avatars={task.members}\n            limit={4}\n          />\n          {task.files > 0 && (\n            <div className={classes.files}>\n              <AttachFileIcon />\n            </div>\n          )}\n          {task.comments > 0 && (\n            <div className={classes.comments}>\n              <ChatIcon />\n            </div>\n          )}\n          <div className={classes.flexGrow} />\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {moment(task.deadline).format('D MMM')}\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nTaskListItem.displayName = 'TaskListItem';\n\nTaskListItem.propTypes = {\n  className: PropTypes.string,\n  onOpen: PropTypes.func.isRequired,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  style: PropTypes.object.isRequired,\n  task: PropTypes.object.isRequired\n};\n\nTaskListItem.defaultProps = {\n  style: {},\n  onOpen: () => {}\n};\n\nexport default TaskListItem;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Modal, Card, CardContent, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 360,\n    maxWidth: '100%'\n  }\n}));\n\nconst TaskDetails = props => {\n  const { open, onClose, task, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  // const mode = task ? 'edit' : 'create';\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <CardContent>\n          <Typography variant=\"h6\">{task.title}</Typography>\n          <Typography variant=\"body1\">{task.desc}</Typography>\n        </CardContent>\n      </Card>\n    </Modal>\n  );\n};\n\nTaskDetails.displayName = 'TaskDetails';\n\nTaskDetails.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  task: PropTypes.any\n};\n\nTaskDetails.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default TaskDetails;\n","import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page } from 'components';\nimport { Header, TaskList, TaskListItem, TaskDetails } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0, 3, 3, 1),\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap'\n  }\n}));\n\nconst KanbanBoard = () => {\n  const classes = useStyles();\n  const [lists, setLists] = useState([]);\n  const [openedTask, setOpenedTask] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchData = () => {\n      axios.get('/api/kanban').then(response => {\n        if (mounted) {\n          const lists = [];\n\n          for (const list of response.data.lists) {\n            lists.push({ ...list, items: [] });\n          }\n\n          for (const task of response.data.tasks) {\n            lists.forEach(list => {\n              if (list.id === task.list) {\n                list.items.push(task);\n              }\n            });\n          }\n\n          setLists(lists);\n        }\n      });\n    };\n\n    fetchData();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleDragEnd = event => {\n    const { source, destination } = event;\n\n    if (!destination) {\n      return;\n    }\n\n    const newLists = _.clone(lists);\n    const sourceList = newLists.find(list => list.id === source.droppableId);\n    const destinationList = newLists.find(\n      list => list.id === destination.droppableId\n    );\n    const [removedItem] = sourceList.items.splice(source.index, 1);\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    } else {\n      removedItem.list = destination.droppableId;\n      destinationList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    }\n  };\n\n  const handleListAdd = () => {\n    const list = {\n      id: uuid(),\n      title: 'New list',\n      items: []\n    };\n\n    setLists(lists => [...lists, list]);\n  };\n\n  const handleTaskOpen = task => {\n    setOpenedTask(task);\n  };\n\n  const handleTaskClose = () => {\n    setOpenedTask(null);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Kanban Board\"\n    >\n      <Header onListAdd={handleListAdd} />\n      <div className={classes.content}>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          {lists.map(list => (\n            <Droppable\n              droppableId={list.id}\n              key={list.id}\n            >\n              {(provided, snapshot) => (\n                <TaskList\n                  provided={provided}\n                  snapshot={snapshot}\n                  title={list.title}\n                  total={list.items.length}\n                >\n                  {list.items.map((task, index) => (\n                    <Draggable\n                      draggableId={task.id}\n                      index={index}\n                      key={task.id}\n                    >\n                      {(provided, snapshot) => (\n                        <TaskListItem\n                          onOpen={() => handleTaskOpen(task)}\n                          provided={provided}\n                          snapshot={snapshot}\n                          task={task}\n                        />\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n      <TaskDetails\n        onClose={handleTaskClose}\n        open={Boolean(openedTask)}\n        task={openedTask}\n      />\n    </Page>\n  );\n};\n\nexport default KanbanBoard;\n","export { default } from './KanbanBoard';\n"],"sourceRoot":""}