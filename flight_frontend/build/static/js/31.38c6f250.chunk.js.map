{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","views/CustomerManagementList/components/Header/Header.js","views/CustomerManagementList/components/Results/Results.js","views/CustomerManagementList/CustomerManagementList.js","views/CustomerManagementList/index.js"],"names":["CheckBoxOutlineBlank","Object","createSvgIcon","react_default","a","createElement","d","CheckBox","IndeterminateCheckBox","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox_Checkbox","forwardRef","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","other","objectWithoutProperties","SwitchBase","esm_extends","type","root","clsx_m","concat","helpers","checked","disabled","data-indeterminate","__webpack_exports__","withStyles","theme","palette","text","secondary","colorPrimary","&$checked","primary","main","&:hover","backgroundColor","colorManipulator","action","hoverOpacity","@media (hover: none)","&$disabled","colorSecondary","name","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePagination_TablePaginationActions","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","useTheme","IconButton","onClick","event","direction","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","TablePagination_TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","colSpanProp","_props$component","component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","className","Toolbar","toolbar","spacer","length","Typography","variant","caption","Select","select","selectIcon","input","InputBase","selectRoot","value","onChange","map","rowsPerPageOption","menuItem","key","min","actions","fontSize","typography","pxToRem","&:last-child","padding","height","minHeight","paddingRight","flex","flexShrink","marginRight","marginLeft","paddingLeft","textAlign","textAlignLast","top","useStyles","makeStyles","Header","rest","assign","clsx","Grid","alignItems","container","justify","spacing","item","gutterBottom","Button","content","inner","minWidth","nameCell","display","avatar","width","justifyContent","Results","customers","_useState","useState","_useState2","slicedToArray","selectedCustomers","setSelectedCustomers","_useState3","_useState4","setPage","_useState5","_useState6","setRowsPerPage","Card","CardHeader","components","title","Divider","CardContent","lib_default","Table","TableHead","TableRow","Checkbox","target","customer","id","align","TableBody","slice","hover","selected","indexOf","selectedIndex","newSelectedCustomers","handleSelectOne","Avatar","src","getInitials","Link","RouterLink","email","location","currency","spent","projects","rating","size","CardActions","TablePagination","defaultProps","results","marginTop","CustomerManagementList","setCustomers","useEffect","mounted","axios","get","then","response","data","components_Header_Header","onFilter","onSearch","components_Results_Results","__webpack_require__","views_CustomerManagementList_CustomerManagementList"],"mappings":"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","file":"static/js/31.38c6f250.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    checkedIcon: indeterminate ? indeterminateIcon : checkedIcon,\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: indeterminate ? indeterminateIcon : icon,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * This prop can be used to pass a ref callback to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.checked`.\n   * @param {boolean} checked The `checked` value of the switch\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary,\n      fontSize: theme.typography.pxToRem(12),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      height: 56,\n      minHeight: 56,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      classes = props.classes,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"classes\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: classes.root,\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption\n    }, rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"caption\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: backIconButtonProps,\n    count: count,\n    nextIconButtonProps: nextIconButtonProps,\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback\n   * @param {number} page The page selected\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n          Add Flighing\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, customers, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedCustomers = event.target.checked\n      ? customers.map(customer => customer.id)\n      : [];\n\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomers.indexOf(id);\n    let newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {customers.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(customers.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"All customers\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCustomers.length === customers.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedCustomers.length > 0 &&\n                          selectedCustomers.length < customers.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Money spent</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Projects held</TableCell>\n                    <TableCell>Reviews</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {customers.slice(0, rowsPerPage).map(customer => (\n                    <TableRow\n                      hover\n                      key={customer.id}\n                      selected={selectedCustomers.indexOf(customer.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={\n                            selectedCustomers.indexOf(customer.id) !== -1\n                          }\n                          color=\"primary\"\n                          onChange={event =>\n                            handleSelectOne(event, customer.id)\n                          }\n                          value={selectedCustomers.indexOf(customer.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <Avatar\n                            className={classes.avatar}\n                            src={customer.avatar}\n                          >\n                            {getInitials(customer.name)}\n                          </Avatar>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to=\"/management/customers/1\"\n                              variant=\"h6\"\n                            >\n                              {customer.name}\n                            </Link>\n                            <div>{customer.email}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{customer.location}</TableCell>\n                      <TableCell>\n                        {customer.currency}\n                        {customer.spent}\n                      </TableCell>\n                      <TableCell>{customer.type}</TableCell>\n                      <TableCell>{customer.projects}</TableCell>\n                      <TableCell>\n                        <ReviewStars value={customer.rating} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/customers/1\"\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={customers.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedCustomers} />\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nimport axios from 'utils/axios';\nimport { Page, SearchBar } from 'components';\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst CustomerManagementList = () => {\n  const classes = useStyles();\n\n  const [customers, setCustomers] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomers = () => {\n      axios.get('/api/management/customers').then(response => {\n        if (mounted) {\n          setCustomers(response.data.customers);\n        }\n      });\n    };\n\n    fetchCustomers();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      {customers && (\n        <Results\n          className={classes.results}\n          customers={customers}\n        />\n      )}\n    </Page>\n  );\n};\n\nexport default CustomerManagementList;\n","export { default } from './CustomerManagementList';\n"],"sourceRoot":""}