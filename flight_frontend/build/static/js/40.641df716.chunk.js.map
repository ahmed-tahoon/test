{"version":3,"sources":["views/ProjectManagementList/components/Header/Header.js","views/ProjectManagementList/components/ProjectCard/ProjectCard.js","views/ProjectManagementList/ProjectManagementList.js","views/ProjectManagementList/index.js"],"names":["useStyles","makeStyles","root","Header","props","className","rest","Object","objectWithoutProperties","classes","react_default","a","createElement","assign","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","color","RouterLink","to","theme","_content","display","flexWrap","marginBottom","content","padding","flexGrow","justifyContent","defineProperty","breakpoints","down","width","paddingBottom","header","maxWidth","flexBasis","avatar","marginRight","stats","actions","ProjectCard","project","statusColors","In progress","colors","orange","Canceled","grey","Completed","green","Card","CardContent","Avatar","alt","src","author","getInitials","name","Link","noWrap","title","currency","price","members","moment","start_date","format","end_date","style","status","size","results","marginTop","paginate","ProjectManagementList","_useState","useState","rowsPerPage","slicedToArray","_useState3","page","_useState5","_useState6","projects","setProjects","useEffect","mounted","axios","get","then","response","data","components","components_Header_Header","onFilter","onSearch","length","Math","ceil","map","components_ProjectCard_ProjectCard","key","id","pageCount","__webpack_require__","d","__webpack_exports__","views_ProjectManagementList_ProjectManagementList"],"mappings":"wMAOMA,EAAYC,YAAW,iBAAO,CAClCC,KAAM,MAqDOC,EAlDA,SAAAC,GAAS,IACdC,EAAuBD,EAAvBC,UAAcC,EADAC,OAAAC,EAAA,EAAAD,CACSH,EADT,eAGhBK,EAAUT,IAEhB,OACEU,EAAAC,EAAAC,cAAA,MAAAL,OAAAM,OAAA,GACMP,EADN,CAEED,UAAWS,YAAKL,EAAQP,KAAMG,KAE9BK,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,WAAW,WACXC,WAAS,EACTC,QAAQ,gBACRC,QAAS,GAETT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,GACRV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,UAAU,KACVC,cAAY,EACZC,QAAQ,YACT,cAGDd,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,UAAU,KACVE,QAAQ,MACT,aAIHd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMK,MAAI,GACRV,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,MAAM,UACNJ,UAAWK,IACXC,GAAG,mBACHJ,QAAQ,aACT,+FC9BLxB,EAAYC,YAAW,SAAA4B,GAAK,IAAAC,EAAA,MAAK,CACrC5B,KAAM,CACJ6B,QAAS,OACTf,WAAY,SACZgB,SAAU,OACVC,aAAcJ,EAAMV,QAAQ,IAE9Be,SAAOJ,EAAA,CACLK,QAASN,EAAMV,QAAQ,GACvBiB,SAAU,EACVL,QAAS,OACTf,WAAY,SACZqB,eAAgB,iBALX9B,OAAA+B,EAAA,EAAA/B,CAAAuB,EAMJD,EAAMU,YAAYC,KAAK,MAAQ,CAC9BC,MAAO,OACPT,SAAU,SARPzB,OAAA+B,EAAA,EAAA/B,CAAAuB,EAUL,eAAgB,CACdY,cAAeb,EAAMV,QAAQ,KAX1BW,GAcPa,OAAOpC,OAAA+B,EAAA,EAAA/B,CAAA,CACLqC,SAAU,OACVH,MAAO,IACPV,QAAS,QACRF,EAAMU,YAAYC,KAAK,MAAQ,CAC9BP,aAAcJ,EAAMV,QAAQ,GAC5B0B,UAAW,SAGfC,OAAQ,CACNC,YAAalB,EAAMV,QAAQ,IAE7B6B,MAAMzC,OAAA+B,EAAA,EAAA/B,CAAA,CACJ4B,QAASN,EAAMV,QAAQ,IACtBU,EAAMU,YAAYC,KAAK,MAAQ,CAC9BK,UAAW,QAGfI,QAAQ1C,OAAA+B,EAAA,EAAA/B,CAAA,CACN4B,QAASN,EAAMV,QAAQ,IACtBU,EAAMU,YAAYC,KAAK,MAAQ,CAC9BK,UAAW,WAwGFK,EAnGK,SAAA9C,GAAS,IACnB+C,EAAgC/C,EAAhC+C,QAAS9C,EAAuBD,EAAvBC,UAAcC,EADJC,OAAAC,EAAA,EAAAD,CACaH,EADb,yBAGrBK,EAAUT,IAEVoD,EAAe,CACnBC,cAAeC,IAAOC,OAAO,KAC7BC,SAAUF,IAAOG,KAAK,KACtBC,UAAWJ,IAAOK,MAAM,MAG1B,OACEjD,EAAAC,EAAAC,cAACgD,EAAA,EAADrD,OAAAM,OAAA,GACMP,EADN,CAEED,UAAWS,YAAKL,EAAQP,KAAMG,KAE9BK,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAaxD,UAAWI,EAAQyB,SAC9BxB,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQkC,QACtBjC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CACEC,IAAI,SACJ1D,UAAWI,EAAQqC,OACnBkB,IAAKb,EAAQc,OAAOnB,QAEnBoB,YAAYf,EAAQc,OAAOE,OAE9BzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACE1C,MAAM,cACNJ,UAAWK,IACX0C,QAAM,EACNzC,GAAG,IACHJ,QAAQ,MAEP2B,EAAQmB,OAEX5D,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,SAAQ,KACvB,IACHd,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACE1C,MAAM,cACNJ,UAAWK,IACXC,GAAG,0BACHJ,QAAQ,MAEP2B,EAAQc,OAAOE,SAKxBzD,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQuC,OACtBtC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,MACjB2B,EAAQoB,SACRpB,EAAQqB,OAEX9D,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,SAAQ,kBAE9Bd,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQuC,OACtBtC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,MAAM2B,EAAQsB,SAClC/D,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,SAAQ,iBAE9Bd,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQuC,OACtBtC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,MACjBkD,IAAOvB,EAAQwB,YAAYC,OAAO,iBAErClE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,SAAQ,oBAE9Bd,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQuC,OACtBtC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,MACjBkD,IAAOvB,EAAQ0B,UAAUD,OAAO,iBAEnClE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,SAAQ,qBAE9Bd,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQuC,OACtBtC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEyD,MAAO,CAAEpD,MAAO0B,EAAaD,EAAQ4B,SACrCvD,QAAQ,MAEP2B,EAAQ4B,QAEXrE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAYG,QAAQ,SAAQ,mBAE9Bd,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQwC,SACtBvC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,MAAM,UACNsD,KAAK,QACLxD,QAAQ,YACT,YC9ILxB,EAAYC,YAAW,SAAA4B,GAAK,MAAK,CACrC3B,KAAM,CACJiC,QAASN,EAAMV,QAAQ,IAEzB8D,QAAS,CACPC,UAAWrD,EAAMV,QAAQ,IAE3BgE,SAAU,CACRD,UAAWrD,EAAMV,QAAQ,GACzBY,QAAS,OACTM,eAAgB,aAgEL+C,EA5De,WAC5B,IAAM3E,EAAUT,IADkBqF,EAEZC,mBAAS,IAAxBC,EAF2BhF,OAAAiF,EAAA,EAAAjF,CAAA8E,EAAA,MAAAI,EAGnBH,mBAAS,GAAjBI,EAH2BnF,OAAAiF,EAAA,EAAAjF,CAAAkF,EAAA,MAAAE,EAIFL,mBAAS,IAJPM,EAAArF,OAAAiF,EAAA,EAAAjF,CAAAoF,EAAA,GAI3BE,EAJ2BD,EAAA,GAIjBE,EAJiBF,EAAA,GAMlCG,oBAAU,WACR,IAAIC,GAAU,EAYd,OATEC,IAAMC,IAAI,iBAAiBC,KAAK,SAAAC,GAC1BJ,GACFF,EAAYM,EAASC,KAAKR,YAOzB,WACLG,GAAU,IAEX,IAKH,OACEtF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CACEjG,UAAWI,EAAQP,KACnBoE,MAAM,2BAEN5D,EAAAC,EAAAC,cAAC2F,EAAD,MACA7F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CACEE,SAVe,aAWfC,SAVe,eAYjB/F,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQwE,SACtBvE,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEK,MAAM,gBACNH,cAAY,EACZC,QAAQ,SAEPqE,EAASa,OAAO,wBAAsBhB,EAAO,EAAE,MAAI,IACnDiB,KAAKC,KAAKf,EAASa,OAASnB,IAE9BM,EAASgB,IAAI,SAAA1D,GAAO,OACnBzC,EAAAC,EAAAC,cAACkG,EAAD,CACEC,IAAK5D,EAAQ6D,GACb7D,QAASA,OAIfzC,EAAAC,EAAAC,cAAA,OAAKP,UAAWI,EAAQ0E,UACtBzE,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAUW,UAAW,OC5E7BC,EAAAC,EAAAC,EAAA,4BAAAC","file":"static/js/40.641df716.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Projects\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            component={RouterLink}\n            to=\"/projects/create\"\n            variant=\"contained\"\n          >\n            Add project\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  Link,\n  Typography,\n  colors\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginBottom: theme.spacing(2)\n  },\n  content: {\n    padding: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      flexWrap: 'wrap'\n    },\n    '&:last-child': {\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  header: {\n    maxWidth: '100%',\n    width: 240,\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(2),\n      flexBasis: '100%'\n    }\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  stats: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  },\n  actions: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  }\n}));\n\nconst ProjectCard = props => {\n  const { project, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const statusColors = {\n    'In progress': colors.orange[600],\n    Canceled: colors.grey[600],\n    Completed: colors.green[600]\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <div className={classes.header}>\n          <Avatar\n            alt=\"Author\"\n            className={classes.avatar}\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <div>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              noWrap\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography variant=\"body2\">\n              by{' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"/management/customers/1\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {project.currency}\n            {project.price}\n          </Typography>\n          <Typography variant=\"body2\">Project price</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">{project.members}</Typography>\n          <Typography variant=\"body2\">Team members</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {moment(project.start_date).format('DD MMMM YYYY')}\n          </Typography>\n          <Typography variant=\"body2\">Project started</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {moment(project.end_date).format('DD MMMM YYYY')}\n          </Typography>\n          <Typography variant=\"body2\">Project deadline</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography\n            style={{ color: statusColors[project.status] }}\n            variant=\"h6\"\n          >\n            {project.status}\n          </Typography>\n          <Typography variant=\"body2\">Project status</Typography>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            View\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nimport axios from 'utils/axios';\nimport { Page, Paginate, SearchBar } from 'components';\nimport { Header, ProjectCard } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  paginate: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nconst ProjectManagementList = () => {\n  const classes = useStyles();\n  const [rowsPerPage] = useState(10);\n  const [page] = useState(0);\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      axios.get('/api/projects').then(response => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleFilter = () => {};\n  const handleSearch = () => {};\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Management List\"\n    >\n      <Header />\n      <SearchBar\n        onFilter={handleFilter}\n        onSearch={handleSearch}\n      />\n      <div className={classes.results}>\n        <Typography\n          color=\"textSecondary\"\n          gutterBottom\n          variant=\"body2\"\n        >\n          {projects.length} Records found. Page {page + 1} of{' '}\n          {Math.ceil(projects.length / rowsPerPage)}\n        </Typography>\n        {projects.map(project => (\n          <ProjectCard\n            key={project.id}\n            project={project}\n          />\n        ))}\n      </div>\n      <div className={classes.paginate}>\n        <Paginate pageCount={3} />\n      </div>\n    </Page>\n  );\n};\n\nexport default ProjectManagementList;\n","export { default } from './ProjectManagementList';\n"],"sourceRoot":""}